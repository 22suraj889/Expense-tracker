{"ast":null,"code":"var _jsxFileName = \"D:\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartDataPoints = [{\n  label: 'Jan',\n  value: 0\n}, {\n  label: 'Feb',\n  value: 0\n}, {\n  label: 'Mar',\n  value: 0\n}, {\n  label: 'Apr',\n  value: 0\n}, {\n  label: 'May',\n  value: 0\n}, {\n  label: 'Jun',\n  value: 0\n}, {\n  label: 'Jul',\n  value: 0\n}, {\n  label: 'Aug',\n  value: 0\n}, {\n  label: 'Sep',\n  value: 0\n}, {\n  label: 'Oct',\n  value: 0\n}, {\n  label: 'Nov',\n  value: 0\n}, {\n  label: 'Dec',\n  value: 0\n}];\n\nfunction ExpensesChart(props) {\n  _s();\n\n  const [dataPointsExpenses, setDataPointsExpenses] = useState(chartDataPoints);\n\n  for (const expense of props.expense) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  setDataPointsExpenses(chartDataPoints);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: dataPointsExpenses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ExpensesChart, \"pwfXwW0peF4m9rIHd4YZVJfOZ6s=\");\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["D:/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"names":["useState","Chart","chartDataPoints","label","value","ExpensesChart","props","dataPointsExpenses","setDataPointsExpenses","expense","expenseMonth","date","getMonth","amount"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AACA,MAAMC,eAAe,GAAG,CACpB;AAAEC,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADoB,EAEpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFoB,EAGpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHoB,EAIpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJoB,EAKpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CALoB,EAMpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CANoB,EAOpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAPoB,EAQpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CARoB,EASpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAToB,EAUpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAVoB,EAWpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAXoB,EAYpB;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAZoB,CAAxB;;AAcA,SAASC,aAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAACE,eAAD,CAA5D;;AACA,OAAI,MAAMO,OAAV,IAAqBH,KAAK,CAACG,OAA3B,EAAmC;AAC/B,UAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAArB;AACAV,IAAAA,eAAe,CAACQ,YAAD,CAAf,CAA8BN,KAA9B,IAAuCK,OAAO,CAACI,MAA/C;AACH;;AACDL,EAAAA,qBAAqB,CAACN,eAAD,CAArB;AACA,sBACQ,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEK;AAAnB;AAAA;AAAA;AAAA;AAAA,UADR;AAGH;;GAVQF,a;;KAAAA,a;AAWT,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst chartDataPoints = [\r\n    { label:'Jan', value: 0 },\r\n    { label:'Feb', value: 0 },\r\n    { label:'Mar', value: 0 },\r\n    { label:'Apr', value: 0 },\r\n    { label:'May', value: 0 },\r\n    { label:'Jun', value: 0 },\r\n    { label:'Jul', value: 0 },\r\n    { label:'Aug', value: 0 },\r\n    { label:'Sep', value: 0 },\r\n    { label:'Oct', value: 0 },\r\n    { label:'Nov', value: 0 },\r\n    { label:'Dec', value: 0 },\r\n];\r\nfunction ExpensesChart (props){\r\n    const [dataPointsExpenses, setDataPointsExpenses] = useState(chartDataPoints)\r\n    for(const expense of props.expense){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    setDataPointsExpenses(chartDataPoints);\r\n    return(\r\n            <Chart dataPoints={dataPointsExpenses}/>\r\n    );\r\n}\r\nexport default ExpensesChart;"]},"metadata":{},"sourceType":"module"}